version: '3.8'
services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: asset_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "wal_level=replica"
      - "-c"
      - "max_wal_senders=10"
      - "-c"
      - "archive_mode=on"
      - "-c"
      - "archive_command=\"test ! -f /var/lib/postgresql/data/archive/%f && cp %p /var/lib/postgresql/data/archive/%f\""
    tmpfs:
      - /var/lib/postgresql/data/archive:uid=999,gid=999

  redis:
    image: redis:7.2-alpine
    restart: always
    ports:
      - "6379:6379"

  asset-service:
    build: ./services/asset_service
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/asset_db
      JWT_SECRET: super-secret-dev-key
      ASSET_STORAGE_PATH: /var/lib/asset-depot
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - asset_depot:/var/lib/asset-depot
    ports:
      - "8000:8000"

  merge-worker:
    build: ./services/asset_service
    command: ["celery", "-A", "app.celery_app.celery_app", "worker", "-Q", "branch_merges", "-l", "info"]
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/asset_db
      JWT_SECRET: super-secret-dev-key
      ASSET_STORAGE_PATH: /var/lib/asset-depot
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - asset_depot:/var/lib/asset-depot

  pgadmin:
    image: dpage/pgadmin4:8.3
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  pgbackups:
    image: prodrigestivill/postgres-backup-local:16
    restart: always
    depends_on:
      - db
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: asset_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      SCHEDULE: "0 3 * * *"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
    volumes:
      - ./backups:/backups

  node-exporter:
    image: prom/node-exporter:v1.7.0
    command:
      - "--path.rootfs=/host"
      - "--collector.textfile.directory=/textfile"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host:ro
      - ./observability/textfile:/textfile
    ports:
      - "9100:9100"

  prometheus:
    image: prom/prometheus:v2.49.1
    depends_on:
      - asset-service
      - node-exporter
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
      - ./observability/textfile:/prometheus/textfile
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.4.3
    profiles: ["grafana"]
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  asset_depot:
  pgadmin_data:
  prometheus_data:
  grafana_data:
